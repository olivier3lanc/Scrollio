$badge-default-typography:      caps;
$badge-default-border-radius:   my-border-radius(1);
$badge-colors-schemes: (
    success: (
        background-color: my-color(success),
        color: my-color(success, max)
    ),
    warning: (
        background-color: my-color(warning),
        color: my-color(warning, max)
    ),
    danger: (
        background-color: my-color(danger),
        color: my-color(danger, max)
    ),
    info: (
        background-color: my-color(brand),
        color: my-color(brand, max)
    ),
    primary: (
        background-color: my-color(primary),
        color: my-color(primary, max)
    ),
    soft: (
        background-color: my-color(brand, hard),
        color: my-color(brand, hard-rev)
    ),
    neutral: (
        background-color: my-color(neutral, dark),
        color: my-color(neutral, light)
    )
);
$badge-default-color-scheme: info;
$badge-sizes: (
    xs: (
        font-size: my-font-size(xxs),
        padding: my-spacing(xxs, xs)
    ),
    md: (
        font-size: my-font-size(xs),
        padding: my-spacing(xxs, sm)
    ),
    xl: (
        font-size: my-font-size(sm),
        padding: my-spacing(xs, md)
    )
);
$badge-default-size: md;

.badge {
    display: inline-block;
    @each $property, $value in map-get($badge-sizes, $badge-default-size) {
        #{$property}: $value;
    }
    &.mod-arrow-right {
        position: relative;
        &:after {
            content: '';
            display: block;
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            left: 100%;
            width: 0px;
            height: 0px;
            border-width: 10px;
            border-style: solid;
        }
    }
    // padding: map-get(map-get($badge-sizes, $badge-default-size), padding);
    // font-size: map-get(map-get($badge-sizes, $badge-default-size), font-size);

    @include my-typography($badge-default-typography);

    @each $property, $value in map-get($badge-colors-schemes, $badge-default-color-scheme) {
        #{$property}: $value;
    }
    // background-color: my-color(neutral);
    // color: my-color(neutral, max);

    border-radius: $badge-default-border-radius;
    vertical-align: middle;
    /*
    * Colors modifiers
    */
    @each $color, $data in $badge-colors-schemes {
        &.mod-#{$color} {
            @each $property, $value in $data {
                #{$property}: $value;
            }
            &.mod-arrow-right {
                &:after {
                    border-color: transparent transparent transparent map-get($data, background-color);
                }
            }
        }
    }

    /*
    *   Size modifiers
    */
    @each $size, $data in $badge-sizes {
        &.mod-#{$size} {
            @each $property, $value in $data {
                #{$property}: $value;
            }
        }
    }
}
