/**
* PADDINGS
* Padding modifiers for items
*/
$grid-item-default-padding: 0+$ds-unit;
$grid-items-paddings: (
    // none:   0+$ds-unit
);

$grid-widths: (
    md: map-get($ds-screen-sizes, md)+$ds-unit,
    lg: map-get($ds-screen-sizes, lg)+$ds-unit
);

$grid-items-max-widths: (
);


/**
* GUTTER MODE
* Spacing betwwen items
*/
$grid-gutter: 13px;
$grid-gutter-box-shadow: none;

.grid {
    margin: auto;
    /**
    * Grid container widths
    */
    @each $screen, $value in $grid-widths {
        &.mod-w-#{$screen} {
            max-width: $value;
        }
    }
    /**
    * Rows styleModifiers
    * Flex type
    */
    &.mod-inline {
        .row {
            display: inline-flex;
        }
    }
    /**
    * Wrap type
    * nowrap means no carriage return when items width exceed container width
    */
    &.mod-nowrap {
        .row {
            flex-wrap: nowrap;
        }
    }
    &.mod-va-top {
        .row {
            align-items: flex-start;
        }
    }
    &.mod-va-baseline {
        .row {
            align-items: baseline;
        }
    }
    &.mod-va-middle {
        .row {
            align-items: center;
        }
    }
    &.mod-va-bottom {
        .row {
            align-items: flex-end;
        }
    }
    &.mod-va-space-between { //To review and improve for usage.
        .row {
            align-content: space-between;
            height: 100%;
        }
    }
    /**
    * Rows styleModifiers
    * Justify content
    */
    &.mod-ha-space-around {
        .row {
            justify-content: space-around;
        }
    }
    &.mod-ha-space-between {
        .row {
            justify-content: space-between;
        }
    }
    &.mod-ha-space-evenly {
        .row {
            justify-content: space-evenly;
        }
    }
    &.mod-ha-left {
        .row {
            justify-content: flex-start;
        }
    }
    &.mod-ha-right {
        .row {
            justify-content: flex-end;
        }
    }
    &.mod-ha-center {
        .row {
            justify-content: center;
        }
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        list-style: none;
        padding: 0;
        margin: 0;
        // Aspect ratio
        // See https://en.wikipedia.org/wiki/Aspect_ratio_(image)
        &[class*="mod-ar-"] {
            &>*:not(.mod-ar-bypass) {
                &:before {
                    content: '';
                    float: left;
                    pointer-events: none;
                }
            }
            &.mod-ar-square {
                &>*:not(.mod-ar-bypass) {
                    &:before {
                        padding-top: 100%;
                    }
                }
            }
            &.mod-ar-dci {
                &>*:not(.mod-ar-bypass) {
                    &:before {
                        padding-top: 52%;
                    }
                }
            }
        }

        &.mod-full-height {
            height: 100%;
        }
        &.mod-column {
            flex-direction: column;
        }
        /**
        * Gutter mode
        */
        &.mod-gutter {
            // padding: $grid-gutter;
            &>* {
                box-shadow: $grid-gutter-box-shadow;
                margin: $grid-gutter;
                &.mod-w-12  { width: calc(100% - #{2 * $grid-gutter}); }
                &.mod-w-11  { width: calc(91.6666% - #{2 * $grid-gutter}); }
                &.mod-w-10  { width: calc(83.3333% - #{2 * $grid-gutter}); }
                &.mod-w-9   { width: calc(75% - #{2 * $grid-gutter}); }
                &.mod-w-8   { width: calc(66.6666% - #{2 * $grid-gutter}); }
                &.mod-w-7   { width: calc(58.3333% - #{2 * $grid-gutter}); }
                &.mod-w-6   { width: calc(50% - #{2 * $grid-gutter}); }
                &.mod-w-5   { width: calc(41.6666% - #{2 * $grid-gutter}); }
                &.mod-w-4   { width: calc(33.3333% - #{2 * $grid-gutter}); }
                &.mod-w-3   { width: calc(25% - #{2 * $grid-gutter}); }
                &.mod-w-2   { width: calc(16.6666% - #{2 * $grid-gutter}); }
                &.mod-w-1   { width: calc(8.3333% - #{2 * $grid-gutter}); }
                &.mod-w-0   { width: calc(0% - #{2 * $grid-gutter}); }

                @each $screen, $value in $ds-screen-sizes {
                    @include my-screen-size($screen) {
                        &.mod-w-12-#{$screen}  { width: calc(100% - #{2 * $grid-gutter}); }
                        &.mod-w-11-#{$screen}  { width: calc(91.6666% - #{2 * $grid-gutter}); }
                        &.mod-w-10-#{$screen}  { width: calc(83.3333% - #{2 * $grid-gutter}); }
                        &.mod-w-9-#{$screen}   { width: calc(75% - #{2 * $grid-gutter}); }
                        &.mod-w-8-#{$screen}   { width: calc(66.6666% - #{2 * $grid-gutter}); }
                        &.mod-w-7-#{$screen}   { width: calc(58.3333% - #{2 * $grid-gutter}); }
                        &.mod-w-6-#{$screen}   { width: calc(50% - #{2 * $grid-gutter}); }
                        &.mod-w-5-#{$screen}   { width: calc(41.6666% - #{2 * $grid-gutter}); }
                        &.mod-w-4-#{$screen}   { width: calc(33.3333% - #{2 * $grid-gutter}); }
                        &.mod-w-3-#{$screen}   { width: calc(25% - #{2 * $grid-gutter}); }
                        &.mod-w-2-#{$screen}   { width: calc(16.6666% - #{2 * $grid-gutter}); }
                        &.mod-w-1-#{$screen}   { width: calc(8.3333% - #{2 * $grid-gutter}); }
                        &.mod-w-0-#{$screen}   { width: calc(0% - #{2 * $grid-gutter}); }
                    }
                }
            }
        }
        /**
        * Wrap type
        * nowrap means no carriage return when items width exceed container width
        */
        &.mod-nowrap {
            flex-wrap: nowrap;
        }
        /**
        * Individual rows styleModifiers
        * Flex type
        */
        &.mod-inline {
            display: inline-flex;
        }
        /**
        * Individual rows styleModifiers
        * Align items
        */
        &.mod-va-top {
            align-items: flex-start;
        }
        &.mod-va-baseline {
            align-items: baseline;
        }
        &.mod-va-middle {
            align-items: center;
        }
        &.mod-va-bottom {
            align-items: flex-end;
        }
        &.mod-va-space-between {
            align-content: space-between;
            height: 100%;
        }

        /**
        * Individual rows styleModifiers
        * Justify content
        */
        &.mod-ha-space-around {
            justify-content: space-around;
        }
        &.mod-ha-space-between {
            justify-content: space-between;
        }
        &.mod-ha-space-evenly {
            justify-content: space-evenly;
        }
        &.mod-ha-left {
            justify-content: flex-start;
        }
        &.mod-ha-right {
            justify-content: flex-end;
        }
        &.mod-ha-center {
            justify-content: center;
        }
        /**
        * Columns
        * Can be any HTML5 tag
        */
        &>* {
            // Default padding
            padding: $grid-item-default-padding;
            max-width: 100%;
            list-style: none;

            /**
            * Make this column item grow according to free space around
            */
            &.mod-grow {
                flex-grow: 1;
            }
            /**
            * Items max width
            */
            @each $name, $value in $grid-items-max-widths {
                &.mod-mw-#{$name} {
                    width: 100%;
                    max-width: $value;
                }
            }
        }
        // Default widths
        &>.mod-w-12  { width: 100%; }
        &>.mod-w-11  { width: 91.6666%; }
        &>.mod-w-10  { width: 83.3333%; }
        &>.mod-w-9   { width: 75%; }
        &>.mod-w-8   { width: 66.6666%; }
        &>.mod-w-7   { width: 58.3333%; }
        &>.mod-w-6   { width: 50%; }
        &>.mod-w-5   { width: 41.6666%; }
        &>.mod-w-4   { width: 33.3333%; }
        &>.mod-w-3   { width: 25%; }
        &>.mod-w-2   { width: 16.6666%; }
        &>.mod-w-1   { width: 8.3333%; }
        &>.mod-w-0   { width: 0%; }

        @each $screen, $value in $ds-screen-sizes {
            @include my-screen-size($screen) {
                &>.mod-w-12-#{$screen}    { max-width: initial; width: 100%; }
                &>.mod-w-11-#{$screen}    { max-width: initial; width: 91.6666%; }
                &>.mod-w-10-#{$screen}    { max-width: initial; width: 83.3333%; }
                &>.mod-w-9-#{$screen}     { max-width: initial; width: 75%; }
                &>.mod-w-8-#{$screen}     { max-width: initial; width: 66.6666%; }
                &>.mod-w-7-#{$screen}     { max-width: initial; width: 58.3333%; }
                &>.mod-w-6-#{$screen}     { max-width: initial; width: 50%; }
                &>.mod-w-5-#{$screen}     { max-width: initial; width: 41.6666%; }
                &>.mod-w-4-#{$screen}     { max-width: initial; width: 33.3333%; }
                &>.mod-w-3-#{$screen}     { max-width: initial; width: 25%; }
                &>.mod-w-2-#{$screen}     { max-width: initial; width: 16.6666%; }
                &>.mod-w-1-#{$screen}     { max-width: initial; width: 8.3333%; }
                &>.mod-w-0-#{$screen}     { max-width: initial; width: 0%; }
            }
        }
    }
}
